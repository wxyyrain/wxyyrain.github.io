<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://wxyyrain.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Dec 2021 14:53:26 +0800</lastBuildDate><atom:link href="https://wxyyrain.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>聚合</title>
      <link>https://wxyyrain.github.io/docs/elasticsearch/mds/4_aggs/</link>
      <pubDate>Sun, 26 Dec 2021 14:53:26 +0800</pubDate>
      
      <guid>https://wxyyrain.github.io/docs/elasticsearch/mds/4_aggs/</guid>
      <description>聚合语法 #  { &amp;#34;size&amp;#34;: 0, &amp;#34;aggs&amp;#34;: { // 与query同级的关键词  &amp;#34;&amp;lt;aggs_name&amp;gt;&amp;#34;: { // 自定义的聚合名字  &amp;#34;&amp;lt;aggs_type&amp;gt;&amp;#34;: { // 聚合的定义：不同的Type + Body  &amp;lt;aggs_body&amp;gt; }, &amp;#34;aggs&amp;#34;: {} // 子聚合查询  }, &amp;#34;&amp;lt;aggs_name_2&amp;gt;&amp;#34; : {} // 可以包含多个同级的聚合查询  } } Metric #   一些系列的统计方法，会基于数据集计算结果，除了支持在字段上进行计算，同样也支持在脚本（painless script）产生的结果之上进行计算，类比SQL中的max、min等函数。
   单值分析：只输出一个分析结果
   aggs_type 含义     min 最小值   max 最大值   avg 平均值   sum 求和   cardinality 去重求数量，相当于distinct count      多值分析</description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://wxyyrain.github.io/docs/elasticsearch/mds/3_search/</link>
      <pubDate>Sun, 26 Dec 2021 14:53:16 +0800</pubDate>
      
      <guid>https://wxyyrain.github.io/docs/elasticsearch/mds/3_search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>分布式原理</title>
      <link>https://wxyyrain.github.io/docs/elasticsearch/mds/2_distribute/</link>
      <pubDate>Sun, 26 Dec 2021 12:14:33 +0800</pubDate>
      
      <guid>https://wxyyrain.github.io/docs/elasticsearch/mds/2_distribute/</guid>
      <description>分布式特性 #   Elasticsearch 天生就是分布式架构。
  带来的好处  存储支持水平扩容，支持PB级数据； 提高系统的可用性，部分节点停止服务，整个集群的服务不受影响。   不同集群的设置  不同的集群通过不同的名字来区分，默认名字 elasticsearch ； 通过配置文件修改，或者在命令行中 -E cluster.name = clustername 进行设定。    分布式模式 #  节点 #   节点是一个Elasticsearch 的实例，其本质就是一个JAVA进程。一台机器上可以运行多个Elasticsearch进程，但是生产环境一般建议一台机器上就运行一个Elasticsearch实例。
每一个节点都有名字，通过配置文件配置，或者启动的时候 -E node.name = nodename指定；每一个节点在启动之后，会分配一个UID，保存在data目录下。
   Coordinating Node
 处理请求的节点，叫Coordinating Node。路由请求道正确的节点，例如创建索引的请求，需要路由到Master节点。
  所有节点默认都是Coordinating Node； 通过将其他类型设置为False，使其成为Dedicated Coordinating Node。    Data Node
 可以保存数据的节点，叫做Data Node，在数据扩展上起到了至关重要的作用（由Master Node决定如何把分片分发到数据节点上）。通过增加 Data Node，可以解决数据水平扩展和解决数据单点问题。
  同一索引，主分片和副本分片不能分配在同一节点，防止某一节点宕机时数据丢失。如果某一个集群只有一个节点，此时某一个索引又存在副本分片，此时集群状态是黄色的，因为无法分配副本分片；如果该集群后续有节点加入，会在新加入的节点创建副本分片。</description>
    </item>
    
  </channel>
</rss>
